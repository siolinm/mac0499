%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%% INSERINDO COMENTÁRIOS EM ARQUIVOS .bib %%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% 1. Como em outros arquivos LaTeX, comentários são iniciados por "%" e,
%    portanto, é preciso usar "\%" para imprimir o caractere "%". Esquecer
%    disso pode gerar erros difíceis de encontrar!
%
% 2. Não é possível inserir comentários dentro de uma entrada, apenas fora.
%
% 3. Não é possível incluir o caractere arroba em um comentário.
%
% 4. Se quiser desabilitar temporariamente um campo ("comentar" o campo),
%    troque seu nome para algum nome inválido, como "author-disable".
%    Se quiser fazer alguma observação permanente dentro de uma entrada,
%    você também pode usar algum nome de campo inválido, como "lembrete",
%    ou usar o campo "annotation", que normalmente é ignorado.
%
% 5. Se quiser desabilitar temporariamente uma entrada inteira ("comentar" a
%    entrada), não basta colocar "%" nas linhas correspondentes por causa do
%    caractere arroba; também é preciso remover a arroba.
%
% 6. Na verdade, as regras não são bem essas, mas segui-las é uma boa ideia:
%    https://tex.stackexchange.com/a/262282
%
% Por exemplo, esta entrada está comentada, ou seja, não tem efeito: se
% houvesse uma referência a ela no texto, a referência ficaria inválida.
% Observe que, para isso, o caractere arroba foi apagado!
%
%Book{JW82,
% author    = {Richard A. Johnson and Dean W. Wichern},
% title     = {Applied Multivariate Statistical Analysis},
% publisher = {Prentice-Hall},
% year      = {1983}
%}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% O CAMPO "MONTH" %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% biblatex prefere o uso do campo "date" para definir ano, mês etc. No
% entanto, se você quiser garantir compatibilidade tanto com biblatex
% quanto com bibtex, use os campos "year" e "month". Ambos reconhecem
% diversos formatos para o campo "month", mas apenas um funciona
% corretamente com os dois: o nome do mês em inglês, abreviado com três
% letras minúsculas e sem chaves, ou seja:
%
% ...
% author = {Somebody},
% year = {2011},
% month = oct,
% title = {Some title},
% ...


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Esta entrada não está em uso em tese.tex, apenas em
% apresentacao.tex, mas isso não é um problema: você pode
% ter um banco de dados com todos os papers que são de seu
% interesse e, em um dado texto, citar apenas alguns deles.

@article{BASCH19991,
    title = {Data Structures for Mobile Data},
    journal = {Journal of Algorithms},
    pages = {1-28},
    year = {1999},
    issn = {0196-6774},
    doi = {https://doi.org/10.1006/jagm.1998.0988},
    url = {https://www.sciencedirect.com/science/article/pii/S0196677498909889},
    author = {Julien Basch and Leonidas J. Guibas and John Hershberger},
    abstract = {Akinetic data structure(KDS) maintains an attribute of interest in a system of geometric objects undergoing continuous motion. In this paper we develop a concentual framework for kinetic data structures, we propose a number of criteria for the quality of such structures, and we describe a number of fundamental techniques for their design. We illustrate these general concepts by presenting kinetic data structures for maintaining the convex hull and the closest pair of moving points in the plane; these structures behave well according to the proposed quality criteria for KDSs.}
}

@mastersthesis{eduardo,
    author = {Eduardo Garcia de Freitas},
    title = {Problemas Cinéticos em Geometria Computacional},
    institution = {Instituto de Matemática e Estatística da Universidade de São Paulo},
    date = {2000},
}

@phdthesis{basch-thesis,
    author = {Julien Basch},
    title = {Kinetic Data Sctructures},
    institution = {Stanford University},
    date = {1999},
}

@book{computationalgeometry,
    author = {Mark de Berg and Otfried Cheong and Marc van Kreveld and Mark Overmars},
    title = {Computational Geometry},
    subtitle = {Algorithms and Applications},
    publisher = {Springer},
    doi = {https://doi.org/10.1007/978-3-540-77974-2},
    date = {2010},
}

@article{guibas-stolfi,
    author = {Leonidas J. Guibas and Jorge Stolfi},
    title = {Primitives for the Manipulation of General Subdivisions and the Computation of Voronoi},
    year = {1985},
    issue_date = {April 1985},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {4},
    number = {2},
    issn = {0730-0301},
    url = {https://doi.org/10.1145/282918.282923},
    doi = {10.1145/282918.282923},
    abstract = {The following problem is discussed: given n points in the plane (the sites) and an arbitrary query point q, find the site that is closest to q. This problem can be solved by constructing the Voronoi diagram of the griven sites and then locating the query point inone of its regions. Two algorithms are given, one that constructs the Voronoi diagram in O(n log n) time, and another that inserts a new sit on O(n) time. Both are based on the use of the Voronoi dual, or Delaunay triangulation, and are simple enough to be of practical value. the simplicity of both algorithms can be attributed to the separation of the geometrical and topological aspects of the problem and to the use of two simple but powerful primitives, a geometric predicate and an operator for manipulating the topology of the diagram. The topology is represented by a new data structure for generalized diagrams, that is, embeddings of graphs in two-dimensional manifolds. This structure represents simultaneously an embedding, its dual, and its mirror image. Furthermore, just two operators are sufficients for building and modifying arbitrary diagrams.},
    journal = {ACM Trans. Graph.},
    month = {apr},
    pages = {74–123},
    numpages = {50},
    keywords = {Voronoi and Delaunay diagrams, trianglations, closest point, representation of polynedra, geometric primitives, planar graphs, computational topology, nearest neighbours, point location, convex hull, Euler operators}
}

@inproceedings{guibas-mitchell-roos,
    author = "Guibas, Leonidas J. and Mitchell, Joseph S. B. and Roos, Thomas",
    editor = "Schmidt, Gunther and Berghammer, Rudolf",
    title = "Voronoi diagrams of moving points in the plane",
    booktitle = "Graph-Theoretic Concepts in Computer Science",
    year = "1992",
    publisher = "Springer",
    address = "Berlin, Heidelberg",
    pages = "113--125",
    abstract = "Consider a set of n points in the Euclidean plane each of which is continuously moving along a given trajectory. At each instant in time, the points define a Voronoi diagram. As the points move, the Voronoi diagram changes continuously, but at certain critical instants in time, topological events occur that cause a change in the Delaunay diagram. In this paper, we present a method of maintaining the Voronoi diagram over time, while showing that the number of topological events has a nearly cubic upper bound of O(n2$\lambda$s(n)), where $\lambda$s,(n) is the maximum length of an (n, s)-Davenport-Schinzel sequence and s is a constant depending on the motions of the point sites. In the special case of points moving at constant speed along straight lines, we get s = 4, implying an upper bound of O(n32$\alpha$(n)), where $\alpha$(n) is the extremely slowly-growing inverse of Ackermann 's function. Our results are a linear-factor improvement over the naive quartic bound on the number of topological events.",
    isbn = "978-3-540-46735-9"
}

@inproceedings{aggarwal-guibas-saxe-shor,
    author = {Aggarwal, Alok. and Guibas, Leonidas J. and Saxe, James. and Shor, Peter.},
    title = {A Linear Time Algorithm for Computing the {V}oronoi Diagram of a Convex Polygon},
    year = {1987},
    isbn = {0897912217},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/28395.28400},
    doi = {10.1145/28395.28400},
    abstract = {We present an algorithm for computing certain kinds of three-dimensional convex hulls in linear time. Using this algorithm, we show that the Voronoi diagram of n points in the plane can be computed in Θ(n) time when these points form the vertices of a convex polygon in, say, counterclockwise order. This settles an outstanding open problem in computational geometry. Our techniques can also be used to obtain linear time algorithms for computing the farthest-point Voronoi diagram and the medial axis of a convex polygon and for deleting a vertex from a general planar Voronoi diagram.},
    booktitle = {Proceedings of the Nineteenth Annual ACM Symposium on Theory of Computing},
    pages = {39–45},
    numpages = {7},
    location = {New York, New York, USA},
    series = {STOC '87}
}
